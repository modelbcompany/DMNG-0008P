/// ----------------------------------------------------------------------------
/// Size Utilities
/// @group utils-size
/// ----------------------------------------------------------------------------

/// ----------------------------------------------------------------------------
/// Mixins
/// ----------------------------------------------------------------------------

/// Set an element's width and max-width to the same value
/// @param {Number} $value - Element width/max-width or height/max-height
/// @param {String} $dimension [width] - Dimension to constrain
@mixin constrain($value, $dimension: width) {
  @if $value == null {
    @error "$value parameter is required";
  }

  @if $dimension == width {
    max-width: $value;
    width: $value;
  } @else {
    height: $value;
    max-height: $value;
  }
}

/// Sets the height and min-height of an element
/// @param {Number | String} $height - height
/// @param {Number | String} $min-height [unset] - min-height
/// @param {Number | String} $max-height [none] - max-height
@mixin height($height, $min-height: unset, $max-height: none) {
  height: $height;
  max-height: $max-height;
  min-height: $min-height;
}

/// Make an element as tall as its parent container
/// @require {mixin} height
/// @require {variable} $sp-fill
@mixin is-full-height {
  @include height($sp-fill, unset, none);
}

/// Make an element as wide as its parent container
/// @require {mixin} width
/// @require {variable} $sp-fill
@mixin is-full-width {
  @include width($sp-fill, unset, none);
}

/// @require {mixin} is-full-height
/// @require {mixin} is-full-width
@mixin is-stretched {
  @include is-full-height;
  @include is-full-width;
}

/// Set an element's height and width
/// @param {Number} $width - Element width
/// @param {Number} $height [$width] - Element height
/// @param {Boolean} $w-important [false] - If true, add !important to width
/// @param {Boolean} $h-important [false] - If true, add !important to height
@mixin size($width, $height: $width, $w-important: false, $h-important: false) {
  height: if($h-important, $height !important, $height);
  width: if($w-important, $width !important, $width);
}

/// Sets the width and min-width of an element
/// @param {Number | String} $width - width
/// @param {Number | String} $min-width [unset] - min-width
/// @param {Number | String} $max-width [none] - max-width
@mixin width($width, $min-width: unset, $max-width: none) {
  max-width: $max-width;
  min-width: $min-width;
  width: $width;
}
