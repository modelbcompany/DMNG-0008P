/// ----------------------------------------------------------------------------
/// Flexbox Helper Classes
/// ----------------------------------------------------------------------------

// Defines the element as a flex container.
// It enables a flex context for all its direct children.
.display-flex,
.flex {
  @include display-flex;
}

// Defines the element as an inline flex container.
// It enables a flex context for all its direct children.
.display-inline-flex,
.inline-flex {
  @include display-flex(inline-flex);
}

// Distribute flexbox items evenly on the axis with equal space around them.
.flex-around-items {
  @include flex-justify(space-around);
}

// Distribute flexbox items evenly on the axis.
.flex-between-items {
  @include flex-justify(space-between);
}

// This defines the direction flex items are placed in the flex container.
// Items will be layed out top to bottom, and centered on both axises.
.flex-centered-columns {
  @include flex-centered-columns;
}

// This defines the direction flex items are placed in the flex container.
// Items will be layed out left to right, and centered on both axises.
.flex-centered-rows {
  @include flex-centered-rows;
}

// This establishes the main-axis, thus defining the direction flex items are
// placed in the flex container. Items will be layed out top to bottom.
.flex-column {
  @include flex-column;
}

// Align flexbox items at the end of the cross-axis.
.flex-end-items {
  @include flex-align(flex-end);
}

// This establishes the main-axis, thus defining the direction flex items are
// placed in the flex container. Items will be layed out left to right.
.flex-row {
  @include flex-row;
}

// Center flexbox items on main axis and distrbute space between elements
.spread {
  @include flex-spread;
}

// Align flexbox items at the start of the cross-axis.
.flex-start-items {
  @include flex-align(flex-start);
}

// Centers flexbox items on the mainn and cross axises.
.is-flex-centered {
  @include is-flex-centered;
}
